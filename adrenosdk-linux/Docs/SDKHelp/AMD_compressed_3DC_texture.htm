<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>AMD_compressed_3DC_texture</title>
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 65.95pt 1.0in 65.95pt;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=EN-US>

<div class=Section1>

<p class=MsoPlainText align=center style='text-align:center'><b><span
style='font-size:20.0pt;font-family:"Times New Roman";color:#333399'>AMD_compressed_3DC_texture</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Name</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    AMD_compressed_3DC_texture</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Name Strings</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    GL_AMD_compressed_3DC_texture</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Contributors</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Aaftab Munshi</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Contact</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Benj Lipchak, AMD (benj.lipchak 'at' amd.com)</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>IP Status</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Please contact AMD regarding any intellectual
property questions/issues </p>

<p class=MsoPlainText>    associated with this extension.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Status</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Complete.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Version</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Last Modified Date: February 26, 2008</p>

<p class=MsoPlainText>    Revision: 6</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Number</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    OpenGL ES Extension #39</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Dependencies</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Written based on the wording of the OpenGL ES 1.1
specification.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Overview</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Two compression formats are introduced:</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    - A compression format for two component textures. 
When used to store </p>

<p class=MsoPlainText>      normal vectors, the two components are commonly
used with a fragment </p>

<p class=MsoPlainText>      shader that derives the third component.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    - A compression format for single component
textures.  The single component</p>

<p class=MsoPlainText>      may be used as a luminance or an alpha value.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    There are a large number of games that use luminance
only and/or alpha only </p>

<p class=MsoPlainText>    textures.  For example, monochrome light maps used in
a few popular games </p>

<p class=MsoPlainText>    are 8-bit luminance textures.  This extension
describes a compression format</p>

<p class=MsoPlainText>    that provides a 2:1 compression ratio for 8-bit
single channel textures.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Normal maps are special textures that are used to add
detail to 3D surfaces.</p>

<p class=MsoPlainText>    They are an extension of earlier &quot;bump map&quot;
textures, which contained per-</p>

<p class=MsoPlainText>    pixel height values and were used to create the
appearance of bumpiness on </p>

<p class=MsoPlainText>    otherwise smooth surfaces.  Normal maps contain more
detailed surface </p>

<p class=MsoPlainText>    information, allowing them to represent much more
complex shapes.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Normal mapping is one of the key features that makes
the current generation</p>

<p class=MsoPlainText>    of games look so much better than earlier titles.  A
limitation to the </p>

<p class=MsoPlainText>    effectiveness of this technique is the size of the
textures required.  In an </p>

<p class=MsoPlainText>    ideal case where every surface has both a color
texture map and a normal </p>

<p class=MsoPlainText>    texture map, the texture memory and bandwidth
requirements would double </p>

<p class=MsoPlainText>    compared to using color maps alone.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    In fact, the problem is much worse because existing
block based compression</p>

<p class=MsoPlainText>    methods such as DXTc, ETC, and S3TC are ineffective
at compressing normal </p>

<p class=MsoPlainText>    maps.  They tend to have trouble capturing the small
edges and subtle </p>

<p class=MsoPlainText>    curvature that normal maps are designed to capture,
and they also introduce </p>

<p class=MsoPlainText>    unsightly block artifacts.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Because normal maps are used to capture light
reflections and realistic </p>

<p class=MsoPlainText>    surface highlights, these problems are amplified
relative to their impact on</p>

<p class=MsoPlainText>    color textures.  The results are sufficiently poor
that game artists and </p>

<p class=MsoPlainText>    developers would rather not use normal map
compression at all on most </p>

<p class=MsoPlainText>    surfaces, and instead limit themselves to lower
resolution maps on selected </p>

<p class=MsoPlainText>    parts of the rendered scene.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    3DC provides an ideal solution to the normal map
compression problem.  It </p>

<p class=MsoPlainText>    provides up to 4:1 compression of normal maps, with
image quality that is </p>

<p class=MsoPlainText>    virtually indistinguishable from the uncompressed
version.  The technique is</p>

<p class=MsoPlainText>    hardware accelerated, so the performance impact is
minimal.  Thus, </p>

<p class=MsoPlainText>    developers are freed to use higher resolution, more
detailed normal maps, </p>

<p class=MsoPlainText>    and/or use them on all of the objects in a scene
rather than just a select </p>

<p class=MsoPlainText>    few.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>New Procedures and
Functions</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    None.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>New Tokens</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Accepted by the &lt;internalFormat&gt; parameter of
CompressedTexImage2D and</p>

<p class=MsoPlainText>    CompressedTexImage3DOES: </p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>        3DC_X_AMD             0x87F9</p>

<p class=MsoPlainText>        3DC_XY_AMD            0x87FA</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Additions to Chapter 3 of
the OpenGL 1.3 Specification (Rasterization)</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Add to Table 3.17:  Specific Compressed Internal
Formats</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>        Compressed Internal Format         Base Internal
Format</p>

<p class=MsoPlainText>        ==========================        
====================</p>

<p class=MsoPlainText>        3DC_X_AMD                          RGB</p>

<p class=MsoPlainText>        3DC_XY_AMD                         RGB</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Add to Section 3.8.3, Alternate Image Specification</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    If &lt;internalFormat&gt; is 3DC_X_AMD, the
compressed texture is a </p>

<p class=MsoPlainText>    single channel compressed texture.  If
&lt;internalFormat&gt; is 3DC_XY_AMD,</p>

<p class=MsoPlainText>    the compressed textures contains two channels.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    The details of these formats is not disclosed, so
refer to AMD's </p>

<p class=MsoPlainText>    Compressonator tool in order to encode your textures
offline:</p>

<p class=MsoPlainText>    http://ati.amd.com/developer/compressonator.html</p>

<p class=MsoPlainText>    </p>

<p class=MsoPlainText>    3DC_X_AMD Format</p>

<p class=MsoPlainText>    ================</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    This format compresses a 128 bit block into 64 bits,
representing a 2:1</p>

<p class=MsoPlainText>    compression ratio.  The texture lookup unit will
return (x, 0, 0, 1): the </p>

<p class=MsoPlainText>    decoded X value in the red component, 0.0 in the
green and blue components,</p>

<p class=MsoPlainText>    and 1.0 in the alpha component.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    3DC_XY_AMD Format</p>

<p class=MsoPlainText>    =================</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    This format compresses a 512 bit block into 128 bits,
representing a 4:1</p>

<p class=MsoPlainText>    compression ratio.  The texture lookup unit will
return (x, y, 0, 1): the </p>

<p class=MsoPlainText>    decoded X value in the red component, the decoded Y
value in the green</p>

<p class=MsoPlainText>    component, 0.0 in the blue component, and 1.0 in the
alpha component.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    Using 3DC_XY_AMD to compress normal maps requires an
additional step. This </p>

<p class=MsoPlainText>    is because each value in a normal map is actually a
3D vector, consisting of</p>

<p class=MsoPlainText>    3 components (x, y, z).  These values must be reduced
to 2-component values</p>

<p class=MsoPlainText>    in order to work with 3DC_XY_AMD.  Fortunately, this
can be handled in a </p>

<p class=MsoPlainText>    simple way by assuming that all of the normal vectors
have a length of 1.  </p>

<p class=MsoPlainText>    Given the values of two components of a vector, the
value of the third </p>

<p class=MsoPlainText>    component can be found using the following
mathematical relationship: </p>

<p class=MsoPlainText>    z = sqrt(1 - (x*x + y*y)).  This formula can be
implemented using just a</p>

<p class=MsoPlainText>    couple of fragment shader instructions.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Errors</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    INVALID_OPERATION is generated by TexImage2D,
TexSubImage2D, </p>

<p class=MsoPlainText>    CompressedTexSubImage2D, or CopyTexSubImage2D if
&lt;internalformat&gt; or </p>

<p class=MsoPlainText>    &lt;format&gt; is 3DC_X_AMD or 3DC_XY_AMD.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>New State</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    The queries for NUM_COMPRESSED_TEXTURE_FORMATS and </p>

<p class=MsoPlainText>    COMPRESSED_TEXTURE_FORMATS include 3DC_X_AMD and
3DC_XY_AMD.</p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText><b><span style='color:#333399'>Revision History</span></b></p>

<p class=MsoPlainText>&nbsp;</p>

<p class=MsoPlainText>    02/26/2008    Benj Lipchak     Throw
INVALID_OPERATION on subimage updates.</p>

<p class=MsoPlainText>    09/24/2007    Jon Leech        Assign extension
number.</p>

<p class=MsoPlainText>    09/05/2007    Benj Lipchak     Cosmetic changes.</p>

<p class=MsoPlainText>    08/01/2007    Benj Lipchak     Publication readiness.</p>

<p class=MsoPlainText>    06/02/2006    Aaftab Munshi    Added IP status.</p>

<p class=MsoPlainText>    05/12/2006    Aaftab Munshi    First Draft.</p>

</div>

</body>

</html>
