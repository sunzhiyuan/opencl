<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>

<LINK REL = "stylesheet"
TYPE = "text/css"
HREF = "..\SDKStyleSheet.css">

<meta name="GENERATOR" content="Microsoft&reg; HTML Help Workshop 4.1">
<Title>Tutorials</Title>
</HEAD>
<BODY>

<IMG class="HeaderImage" SRC= ..\SDK_HelpBanner_v5.png>


<H1>Tutorials</H1>

<TABLE>
<TR><TH class="header1"colspan=2><a name="ES 2.0 Tutorials">OpenGL ES 2.0 Tutorials</a></TH></TR>
<TR> <TD><B>01_CreateWindow</B></TD> <TD>Shows how to use EGL to create an empty rendering window.</TD</TR>
<TR> <TD><B>02_ConfigureFrameBuffer</B></TD> <TD>Shows how to configure the framebuffer for 16 and 32-bit displays. Detects the current resolution and configures the framebuffer accordingly.</TD</TR>
<TR> <TD><B>03_DrawTriangle</B></TD> <TD>Shows how to render a triangle with a simple vertex and fragment shader.</TD</TR>
<TR> <TD><B>04_PortraitAndLandscape</B></TD> <TD>Shows how to render geometry in landscape and portrait mode. Press the * key to change the orientation.</TD</TR>
<TR> <TD><B>05_NonInterleavedVBO</B></TD> <TD>Shows how to use vertex buffer objects where each vertex attribute is stored in a seperate buffer.</TD</TR>
<TR> <TD><B>06_InterleavedVBO</B></TD> <TD>Shows how to use interleaved vertex buffer objects.</TD</TR>
<TR> <TD><B>07_Transforms</B></TD> <TD>Shows how to transform a 3D object with model, view, and projection matrix transforms. This program shows how to pass transforms into a shader program and use them in a vertex shader.</TD</TR>
<TR> <TD><B>08_SimpleTexture</B></TD> <TD>Shows how to do simple texture mapping.</TD</TR>
<TR> <TD><B>09_CompressedTexture</B></TD> <TD>Shows how to do texture mapping with the ATC compressed texture format.</TD</TR>
<TR> <TD><B>10_TextureProperties</B></TD> <TD>Shows how to use various texture properties.</TD</TR>
<TR> <TD><B>11_MultiTexture</B></TD> <TD>Shows how to do multi-texturing. It applies 2 textures to the object, a wood texture and a scrolling clouds texture on top of it.</TD</TR>
<TR> <TD><B>12_CubemapTexture</B></TD> <TD>Shows how to use cubemap textures.</TD</TR>
<TR> <TD><B>13_CompressedVertices</B></TD> <TD>Shows how to compress vertex data with 16-bit floats and the GL_INT_10_10_10_2 extension.</TD</TR>
<TR> <TD><B>14_StencilBuffer</B></TD> <TD>Shows how to use the stencil buffer to limit render regions.</TD</TR>
<TR> <TD><B>15_RenderToTexture</B></TD> <TD>Shows how to render to an offscreen texture using a frame buffer object.  The scene is rendered to the color buffer and also to an offscreen texture. The texture is then displayed in the upper right corner.</TD</TR>
</TABLE>

<TABLE>
<TR><TH class="header1"colspan=2><a name="ES 3.0 Tutorials">OpenGL ES 3.0 Tutorials</a></TH></TR>
<TR> <TD><B>16_RenderToTexture30</B></TD> <TD>Tutorial to show how to use FBOs to render to a texture using OpenGL ES 3.0.</TD</TR>
<TR> <TD><B>17_FBOTextureFormats30</B></TD> <TD>Tutorial showing different texture formats when rendering to a simple texture using an FBO.</TD</TR>
<TR> <TD><B>18_InterleavedVBO-DrawArraysInstanced30</B></TD> <TD>Tutorial showing how to render a simple quad using a vertex buffer object (VBO). This version uses glDrawArraysInstanced.</TD</TR>
<TR> <TD><B>19_InterleavedVBO-DrawRangeElements30</B></TD> <TD>Tutorial showing how to render a simple quad using a vertex buffer object (VBO). This version uses glDrawRangeElements.</TD</TR>
<TR> <TD><B>20_Texture2DArray30</B></TD> <TD>Tutorial showing how to render a simple quad using a vertex buffer object (VBO). This version uses glDrawArraysInstanced.</TD</TR>
<TR> <TD><B>21_PixelBufferObject30</B></TD> <TD>Tutorial to show how to use pixel buffer objects.</TD</TR>
<TR> <TD><B>22_TransformFeedback30</B></TD> <TD>Tutorial to show how to use transform feedback to return the number of rendered primitives.</TD</TR>
<TR> <TD><B>23_BlitFramebuffer30</B></TD> <TD>Tutorial to show how to blit from one framebuffer to another.</TD</TR>
<TR> <TD><B>24_MultisampleFramebuffer30</B></TD> <TD>Tutorial showing how to use multiple framebuffers.</TD</TR>
<TR> <TD><B>25_FramebufferTextureLayer</B></TD> <TD>Tutorial showing how to specify a single texture layer as the GL_COLOR_ATTACHMENT0 for a framebuffer object.</TD</TR>
</TABLE>



<p><p>


<iframe src = "../Footer.htm" width = "100%" height = "120" frameborder = "0" scrolling = "no">
</iframe>

</BODY>
</HTML>
